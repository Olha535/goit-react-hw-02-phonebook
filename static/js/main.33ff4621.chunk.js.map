{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","label","type","pattern","title","required","onChange","input","button","Component","ContactList","contacts","deleteContact","contactList","map","id","contactItem","onClick","Filter","filter","App","contactJson","formSubmitHandler","data","contactId","uuidv4","newContact","find","contact","toLowerCase","alert","changeFilter","visibleContact","normalizedFilter","includes","prevState","filterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33ff4621.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__kS9GC\",\"button\":\"ContactForm_button__cFJab\",\"input\":\"ContactForm_input__3BOP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3Q1ZL\",\"contactItem\":\"ContactList_contactItem__2pR6V\",\"button\":\"ContactList_button__1eiXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2XWJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3JOtT\",\"input\":\"Filter_input__2pRDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__20Zi5\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <button className={s.button}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          {name}: {number}\n          <button className={s.button} onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n  render() {\n    const { filter, onChange } = this.props;\n    return (\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChange}\n          className={s.input}\n        />\n      </label>\n    );\n  }\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport contactJson from '../contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: contactJson,\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const contactId = uuidv4();\n    const newContact = { ...data, id: contactId };\n    const { name } = data;\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const {\n      changeFilter,\n      formSubmitHandler,\n      visibleContact,\n      deleteContact,\n      state: { filter },\n    } = this;\n    const filterContact = visibleContact();\n\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={filter} onChange={changeFilter} />\n        <ContactList contacts={filterContact} deleteContact={deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}